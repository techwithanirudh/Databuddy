import { Analytics } from '../../types/tables';
import type { SimpleQueryConfig } from '../types';

// Performance percentile queries with P50, P75, P90, P95, P99 metrics
// Uses both events table (for load times) and web_vitals table (for Core Web Vitals)

export const PerformanceBuilders: Record<string, SimpleQueryConfig> = {
	slow_pages: {
		table: Analytics.events,
		fields: [
			"decodeURLComponent(CASE WHEN trimRight(path(path), '/') = '' THEN '/' ELSE trimRight(path(path), '/') END) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'", "path != ''", 'load_time > 0'],
		groupBy: [
			"decodeURLComponent(CASE WHEN trimRight(path(path), '/') = '' THEN '/' ELSE trimRight(path(path), '/') END)",
		],
		orderBy: 'p50_load_time DESC',
		limit: 100,
		timeField: 'time',
		customizable: true,
	},
	performance_by_browser: {
		table: Analytics.events,
		fields: [
			"CONCAT(browser_name, ' ', browser_version) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: [
			"event_name = 'screen_view'",
			"browser_name != ''",
			"browser_version != ''",
			'browser_version IS NOT NULL',
			'load_time > 0',
		],
		groupBy: ['browser_name', 'browser_version'],
		orderBy: 'p50_load_time DESC',
		limit: 100,
		timeField: 'time',
		customizable: true,
	},

	performance_by_country: {
		table: Analytics.events,
		fields: [
			'country as name',
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'", "country != ''", 'load_time > 0'],
		groupBy: ['country'],
		orderBy: 'p50_load_time DESC',
		limit: 100,
		timeField: 'time',
		customizable: true,
		plugins: { normalizeGeo: true, deduplicateGeo: true },
	},

	performance_by_os: {
		table: Analytics.events,
		fields: [
			'os_name as name',
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'", "os_name != ''", 'load_time > 0'],
		groupBy: ['os_name'],
		orderBy: 'p50_load_time DESC',
		limit: 100,
		timeField: 'time',
		customizable: true,
	},

	performance_by_region: {
		table: Analytics.events,
		fields: [
			"CONCAT(region, ', ', country) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'", "region != ''", 'load_time > 0'],
		groupBy: ['region', 'country'],
		orderBy: 'p50_load_time DESC',
		limit: 100,
		timeField: 'time',
		customizable: true,
	},

	performance_time_series: {
		table: Analytics.events,
		fields: [
			'toDate(time) as date',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'AVG(CASE WHEN ttfb > 0 THEN ttfb ELSE NULL END) as avg_ttfb',
			'AVG(CASE WHEN dom_ready_time > 0 THEN dom_ready_time ELSE NULL END) as avg_dom_ready_time',
			'AVG(CASE WHEN render_time > 0 THEN render_time ELSE NULL END) as avg_render_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'"],
		groupBy: ['toDate(time)'],
		orderBy: 'date ASC',
		timeField: 'time',
		customizable: true,
	},

	load_time_performance: {
		table: Analytics.events,
		fields: [
			'toDate(time) as date',
			'AVG(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as avg_load_time',
			'quantile(0.50)(CASE WHEN load_time > 0 THEN load_time ELSE NULL END) as p50_load_time',
			'COUNT(*) as pageviews',
		],
		where: ["event_name = 'screen_view'", 'load_time > 0'],
		groupBy: ['toDate(time)'],
		orderBy: 'date ASC',
		timeField: 'time',
		customizable: true,
	},

	web_vitals_by_page: {
		table: Analytics.web_vitals,
		fields: [
			"decodeURLComponent(CASE WHEN trimRight(path(path), '/') = '' THEN '/' ELSE trimRight(path(path), '/') END) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'COUNT(*) as measurements',
		],
		where: ["path != ''"],
		groupBy: [
			"decodeURLComponent(CASE WHEN trimRight(path(path), '/') = '' THEN '/' ELSE trimRight(path(path), '/') END)",
		],
		orderBy: 'p50_lcp DESC',
		limit: 100,
		timeField: 'timestamp',
		customizable: true,
	},

	web_vitals_by_browser: {
		table: Analytics.web_vitals,
		fields: [
			"CONCAT(browser_name, ' ', browser_version) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'COUNT(*) as measurements',
		],
		where: [
			"browser_name != ''",
			"browser_version != ''",
			'browser_version IS NOT NULL',
		],
		groupBy: ['browser_name', 'browser_version'],
		orderBy: 'p50_lcp DESC',
		limit: 100,
		timeField: 'timestamp',
		customizable: true,
	},

	web_vitals_by_country: {
		table: Analytics.web_vitals,
		fields: [
			'country as name',
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'COUNT(*) as measurements',
		],
		where: ["country != ''"],
		groupBy: ['country'],
		orderBy: 'p50_lcp DESC',
		limit: 100,
		timeField: 'timestamp',
		customizable: true,
		plugins: { normalizeGeo: true, deduplicateGeo: true },
	},

	web_vitals_by_os: {
		table: Analytics.web_vitals,
		fields: [
			'os_name as name',
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'COUNT(*) as measurements',
		],
		where: ["os_name != ''"],
		groupBy: ['os_name'],
		orderBy: 'p50_lcp DESC',
		limit: 100,
		timeField: 'timestamp',
		customizable: true,
	},

	web_vitals_by_region: {
		table: Analytics.web_vitals,
		fields: [
			"CONCAT(region, ', ', country) as name",
			'COUNT(DISTINCT anonymous_id) as visitors',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls IS NOT NULL THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'COUNT(*) as measurements',
		],
		where: ["region != ''"],
		groupBy: ['region', 'country'],
		orderBy: 'p50_lcp DESC',
		limit: 100,
		timeField: 'timestamp',
		customizable: true,
		plugins: { normalizeGeo: true, deduplicateGeo: true },
	},

	web_vitals_time_series: {
		table: Analytics.web_vitals,
		fields: [
			'toDate(timestamp) as date',
			'AVG(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as avg_fcp',
			'quantile(0.50)(CASE WHEN fcp > 0 THEN fcp ELSE NULL END) as p50_fcp',
			'AVG(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as avg_lcp',
			'quantile(0.50)(CASE WHEN lcp > 0 THEN lcp ELSE NULL END) as p50_lcp',
			'AVG(CASE WHEN cls > 0 THEN cls ELSE NULL END) as avg_cls',
			'quantile(0.50)(CASE WHEN cls > 0 THEN cls ELSE NULL END) as p50_cls',
			'AVG(CASE WHEN fid > 0 THEN fid ELSE NULL END) as avg_fid',
			'quantile(0.50)(CASE WHEN fid > 0 THEN fid ELSE NULL END) as p50_fid',
			'AVG(CASE WHEN inp > 0 THEN inp ELSE NULL END) as avg_inp',
			'quantile(0.50)(CASE WHEN inp > 0 THEN inp ELSE NULL END) as p50_inp',
			'COUNT(*) as measurements',
		],
		where: [],
		groupBy: ['toDate(timestamp)'],
		orderBy: 'date ASC',
		timeField: 'timestamp',
		customizable: true,
	},
};
